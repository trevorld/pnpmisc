% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pdf_add_rects.R
\name{grid_add_rects}
\alias{grid_add_rects}
\title{Draw (rounded) rectangles around components}
\usage{
grid_add_rects(
  ...,
  layout = "poker_3x3",
  r = unit(0, "in"),
  gp = gpar(col = "black", fill = NA, lwd = 1)
)
}
\arguments{
\item{...}{Ignored for now.}

\item{layout}{Either a layout preset name in \code{\link[=layout_names]{layout_names()}} or a data frame
with layout data (as returned by \code{\link[=layout_grid]{layout_grid()}}).}

\item{r, gp}{Passed to \code{\link[grid:grid.roundrect]{grid::grid.roundrect()}}.}
}
\value{
\code{NULL} invisibly.
As a side effect draws rectangles to the active graphics device.
}
\description{
\code{grid_add_rects()} draws (rounded) rectangles around components of a print-and-play layout.
}
\details{
\itemize{
\item This function draws in \strong{inches} so make sure your graphics device is "big" enough.
\item Sometimes if you use the same color as a solid background color
this can be used to effectively "remove" unwanted card outlines.
}
}
\examples{
grid::grid.newpage()
vp <- grid::viewport(width=8.5, height=11, default.units="in",
                     x=0.5, y=0.5, just=c("left", "bottom"))
grid::pushViewport(vp)
grid_add_rects(layout = "poker_3x3")
grid::popViewport()
}
\seealso{
\code{\link[=pdf_add_rects]{pdf_add_rects()}}, \code{\link[grid:grid.roundrect]{grid::grid.roundrect()}}
}
